# apt - advanced packaging tool
-sudo apt upgrade -> upgrades all available packages
- sudo apt install <package-name> -> install the specified package
- 

# pip -> python install package
- pip install <package-name>

# Special paths
~ - home directory
/ - root directory
. - present directory
.. - parent of present directory

# Comman Commands
- ps -e -> all running processes
- top -n 3 -> resource usage #top - table of processes
- man <any command> -> reference manual for any command
- date -> today's date
- uname -> operating system name
- cp -> copy file
- mv -> move file
- rf -> remove file
- rm -i -r <filename> -> remove a file and its child directoried
- rmdir -> remove empty directories
- touch file..file n-> create one or, nore empty files
- chmod -> change/modify file permissions
- wc <file-name> -> get count of the lines, words, characters in a file
- wc -l/-w/-c <file-name> -> for only counting lines/words/chars
- grep -> return lines in a file matching pattern
- find . -name "search-text"-> find files in the present directory
- sort <file-nem> display the lines of a file sorted alphanumerically
- sort -r <file-name> in reverse order
- uniq -> Drop consecutive duplicated lines and display result
## Basic text wrangling: extracting lines and fields
- grep <pattern> <file-name> -> specify a pattern and search for lines within a file that match that pattern
Option	Description
  -n	Along with the matching lines, also print the line numbers
  -c	Get the count of matching lines
  -i	Ignore the case of the text while matching
  -v	Print all lines which do not contain the pattern
  -w	Match only if the pattern matches whole words
- rmdir -> removes an entire directory
- cat -> print file contents
- more -> print file contents page-by-page
- head -> print first N lines of a file
- tail -> print last N lines of a file
- df -h -> disk space
- wget -> downloading files from the web via HTTP, HTTPS, or FTP protocols.

# File compression and archiving
- tar -> archive a set of file
- zip -> compress a set of files
- unzip -> extract files from a compressed zip archive
# Networking
- hostname -> print hostname
- ping -> send packets to url and prints response
- ifconfig -> display or, config system network interfaces
- curl -> displays contents of file at a url
- wget -> download file from a url

# Security - Managing File Permissions and Ownership
- Whoever creates a file, namely the `user` at the time of creation, becomes the `owner` of that file by default. A `group` of users can also share ownership of a file. The `other` category essentially refers to anyone in the universe with access to your Linux machine.
- Only an official owner of a file is allowed to change its permissions.
- ls -l -> displays the file's (default) permissions: rw-r--r-- -> user-permissions(rw)-group-permissions(r)--others-permissions(r)--
- chmod go-r <file-name> ->  `go-r` is the permission change to be applied, which in this case means removing for the group (g) and others (o) the read (r) permission. 
- chmod -r <file-name> -> revokes the read permissions for all the users
- chmod +r <file-name> -> grants read permissions for all the users
- chmod o-r <file-name> -> revokes the read permissions only for others
- The chmod command can be used with both files and directories.

